# Generated by Django 5.2.3 on 2025-06-28 14:28

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('home', '0003_remove_reservation_client_remove_reservation_maison_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TypePaiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50, unique=True, verbose_name='Nom')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('actif', models.BooleanField(default=True, verbose_name='Actif')),
                ('frais_pourcentage', models.DecimalField(decimal_places=2, default=0, help_text='Frais en pourcentage (ex: 2.5 pour 2.5%)', max_digits=5, verbose_name='Frais (%)')),
                ('frais_fixe', models.DecimalField(decimal_places=2, default=0, help_text='Frais fixe en FCFA', max_digits=8, verbose_name='Frais fixe (FCFA)')),
                ('icone', models.CharField(default='credit-card', max_length=50, verbose_name='Icône')),
                ('couleur', models.CharField(default='blue', max_length=20, verbose_name='Couleur')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Type de paiement',
                'verbose_name_plural': 'Types de paiement',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(help_text='Généré automatiquement', max_length=20, unique=True, verbose_name='Numéro de réservation')),
                ('date_debut', models.DateField(verbose_name='Date de début')),
                ('date_fin', models.DateField(verbose_name='Date de fin')),
                ('heure_arrivee', models.TimeField(blank=True, help_text="Heure d'arrivée prévue", null=True, verbose_name="Heure d'arrivée")),
                ('heure_depart', models.TimeField(blank=True, help_text='Heure de départ prévue', null=True, verbose_name='Heure de départ')),
                ('nombre_personnes', models.PositiveIntegerField(verbose_name='Nombre de personnes')),
                ('nombre_nuits', models.PositiveIntegerField(editable=False, verbose_name='Nombre de nuits')),
                ('statut', models.CharField(choices=[('en_attente', 'En attente'), ('confirmee', 'Confirmée'), ('annulee', 'Annulée'), ('terminee', 'Terminée')], default='en_attente', max_length=20, verbose_name='Statut')),
                ('prix_par_nuit', models.DecimalField(decimal_places=2, help_text='Prix au moment de la réservation', max_digits=8, verbose_name='Prix par nuit (FCFA)')),
                ('frais_service', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='Frais de service (FCFA)')),
                ('reduction_montant', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='Réduction (FCFA)')),
                ('reduction_raison', models.CharField(blank=True, max_length=255, verbose_name='Raison de la réduction')),
                ('sous_total', models.DecimalField(decimal_places=2, editable=False, max_digits=8, verbose_name='Sous-total (FCFA)')),
                ('prix_total', models.DecimalField(decimal_places=2, editable=False, max_digits=8, verbose_name='Prix total (FCFA)')),
                ('mode_paiement', models.CharField(choices=[('integral', 'Paiement intégral'), ('acompte', 'Acompte (30%)'), ('echelonne', 'Paiement échelonné')], default='integral', max_length=20, verbose_name='Mode de paiement')),
                ('montant_acompte', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name="Montant de l'acompte (FCFA)")),
                ('commentaire_client', models.TextField(blank=True, help_text='Demandes spéciales, remarques...', verbose_name='Commentaire du client')),
                ('commentaire_gestionnaire', models.TextField(blank=True, help_text='Notes internes, instructions...', verbose_name='Notes du gestionnaire')),
                ('contact_urgence_nom', models.CharField(blank=True, max_length=100, verbose_name="Contact d'urgence - Nom")),
                ('contact_urgence_telephone', models.CharField(blank=True, max_length=20, verbose_name="Contact d'urgence - Téléphone")),
                ('date_annulation', models.DateTimeField(blank=True, null=True, verbose_name="Date d'annulation")),
                ('raison_annulation', models.TextField(blank=True, verbose_name="Raison de l'annulation")),
                ('rappel_envoye', models.BooleanField(default=False, verbose_name='Rappel envoyé')),
                ('evaluation_demandee', models.BooleanField(default=False, verbose_name='Évaluation demandée')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('ip_creation', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP de création')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('annulee_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reservations_annulees', to=settings.AUTH_USER_MODEL, verbose_name='Annulée par')),
                ('client', models.ForeignKey(limit_choices_to={'role': 'CLIENT'}, on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to=settings.AUTH_USER_MODEL, verbose_name='Client')),
                ('maison', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='home.maison', verbose_name='Maison')),
            ],
            options={
                'verbose_name': 'Réservation',
                'verbose_name_plural': 'Réservations',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='EvaluationReservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_globale', models.PositiveSmallIntegerField(choices=[(1, '1 étoile'), (2, '2 étoiles'), (3, '3 étoiles'), (4, '4 étoiles'), (5, '5 étoiles')], verbose_name='Note globale')),
                ('note_proprete', models.PositiveSmallIntegerField(choices=[(1, '1 étoile'), (2, '2 étoiles'), (3, '3 étoiles'), (4, '4 étoiles'), (5, '5 étoiles')], verbose_name='Propreté')),
                ('note_equipements', models.PositiveSmallIntegerField(choices=[(1, '1 étoile'), (2, '2 étoiles'), (3, '3 étoiles'), (4, '4 étoiles'), (5, '5 étoiles')], verbose_name='Équipements')),
                ('note_emplacement', models.PositiveSmallIntegerField(choices=[(1, '1 étoile'), (2, '2 étoiles'), (3, '3 étoiles'), (4, '4 étoiles'), (5, '5 étoiles')], verbose_name='Emplacement')),
                ('note_rapport_qualite_prix', models.PositiveSmallIntegerField(choices=[(1, '1 étoile'), (2, '2 étoiles'), (3, '3 étoiles'), (4, '4 étoiles'), (5, '5 étoiles')], verbose_name='Rapport qualité/prix')),
                ('commentaire', models.TextField(help_text='Partagez votre expérience', verbose_name='Commentaire')),
                ('points_positifs', models.TextField(blank=True, verbose_name='Points positifs')),
                ('points_amelioration', models.TextField(blank=True, verbose_name='Points à améliorer')),
                ('recommande', models.BooleanField(verbose_name='Recommanderiez-vous cette maison ?')),
                ('reviendrait', models.BooleanField(verbose_name='Reviendriez-vous ?')),
                ('approuve', models.BooleanField(default=True, verbose_name='Approuvé')),
                ('raison_rejet', models.TextField(blank=True, verbose_name='Raison du rejet')),
                ('reponse_gestionnaire', models.TextField(blank=True, verbose_name='Réponse du gestionnaire')),
                ('date_reponse_gestionnaire', models.DateTimeField(blank=True, null=True, verbose_name='Date de réponse')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('reservation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='evaluation', to='reservations.reservation', verbose_name='Réservation')),
            ],
            options={
                'verbose_name': 'Évaluation de réservation',
                'verbose_name_plural': 'Évaluations de réservations',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='Paiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_transaction', models.CharField(max_length=100, unique=True, verbose_name='Numéro de transaction')),
                ('montant', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Montant (FCFA)')),
                ('frais', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='Frais (FCFA)')),
                ('montant_net', models.DecimalField(decimal_places=2, editable=False, max_digits=8, verbose_name='Montant net (FCFA)')),
                ('statut', models.CharField(choices=[('en_attente', 'En attente'), ('valide', 'Validé'), ('echec', 'Échec'), ('rembourse', 'Remboursé')], default='en_attente', max_length=20, verbose_name='Statut')),
                ('reference_externe', models.CharField(blank=True, help_text='Référence du système de paiement externe', max_length=255, verbose_name='Référence externe')),
                ('reponse_gateway', models.JSONField(blank=True, default=dict, help_text='Réponse complète du système de paiement', verbose_name='Réponse du gateway')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_validation', models.DateTimeField(blank=True, null=True)),
                ('date_echec', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, verbose_name='Notes internes')),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paiements', to='reservations.reservation', verbose_name='Réservation')),
                ('type_paiement', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reservations.typepaiement', verbose_name='Type de paiement')),
            ],
            options={
                'verbose_name': 'Paiement',
                'verbose_name_plural': 'Paiements',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='Disponibilite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date')),
                ('disponible', models.BooleanField(default=True, verbose_name='Disponible')),
                ('prix_special', models.DecimalField(blank=True, decimal_places=2, help_text='Prix spécial pour cette date (optionnel)', max_digits=8, null=True, verbose_name='Prix spécial (FCFA)')),
                ('raison_indisponibilite', models.CharField(blank=True, max_length=255, verbose_name="Raison de l'indisponibilité")),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('maison', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disponibilites', to='home.maison', verbose_name='Maison')),
            ],
            options={
                'verbose_name': 'Disponibilité',
                'verbose_name_plural': 'Disponibilités',
                'ordering': ['maison', 'date'],
                'indexes': [models.Index(fields=['maison', 'date'], name='reservation_maison__bf8644_idx'), models.Index(fields=['date', 'disponible'], name='reservation_date_2eb2c2_idx')],
                'unique_together': {('maison', 'date')},
            },
        ),
        migrations.AddIndex(
            model_name='reservation',
            index=models.Index(fields=['numero'], name='reservation_numero_1bb553_idx'),
        ),
        migrations.AddIndex(
            model_name='reservation',
            index=models.Index(fields=['client'], name='reservation_client__32bdf7_idx'),
        ),
        migrations.AddIndex(
            model_name='reservation',
            index=models.Index(fields=['maison'], name='reservation_maison__23d086_idx'),
        ),
        migrations.AddIndex(
            model_name='reservation',
            index=models.Index(fields=['statut'], name='reservation_statut_edd3f4_idx'),
        ),
        migrations.AddIndex(
            model_name='reservation',
            index=models.Index(fields=['date_debut', 'date_fin'], name='reservation_date_de_8de59c_idx'),
        ),
        migrations.AddIndex(
            model_name='reservation',
            index=models.Index(fields=['date_creation'], name='reservation_date_cr_5268a6_idx'),
        ),
        migrations.AddConstraint(
            model_name='reservation',
            constraint=models.CheckConstraint(condition=models.Q(('date_fin__gt', models.F('date_debut'))), name='date_fin_after_date_debut'),
        ),
        migrations.AddConstraint(
            model_name='reservation',
            constraint=models.CheckConstraint(condition=models.Q(('nombre_personnes__gte', 1)), name='nombre_personnes_positive'),
        ),
        migrations.AddConstraint(
            model_name='reservation',
            constraint=models.CheckConstraint(condition=models.Q(('prix_par_nuit__gte', 0)), name='prix_par_nuit_positive'),
        ),
        migrations.AddIndex(
            model_name='paiement',
            index=models.Index(fields=['numero_transaction'], name='reservation_numero__b38a59_idx'),
        ),
        migrations.AddIndex(
            model_name='paiement',
            index=models.Index(fields=['reservation'], name='reservation_reserva_0e7e1d_idx'),
        ),
        migrations.AddIndex(
            model_name='paiement',
            index=models.Index(fields=['statut'], name='reservation_statut_3d7575_idx'),
        ),
        migrations.AddIndex(
            model_name='paiement',
            index=models.Index(fields=['date_creation'], name='reservation_date_cr_322d5b_idx'),
        ),
    ]
