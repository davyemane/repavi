# Generated by Django 5.2.4 on 2025-07-10 20:31

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CategorieMaison',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('couleur', models.CharField(default='blue', max_length=20)),
                ('icone', models.CharField(default='home', help_text="Icône pour l'affichage", max_length=50)),
            ],
            options={
                'verbose_name': 'Catégorie de maison',
                'verbose_name_plural': 'Catégories de maisons',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='PhotoMaison',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='maisons/photos/', verbose_name='Image')),
                ('titre', models.CharField(blank=True, max_length=100, verbose_name='Titre')),
                ('type_photo', models.CharField(choices=[('exterieur', 'Extérieur'), ('salon', 'Salon'), ('chambre', 'Chambre'), ('cuisine', 'Cuisine'), ('salle_bain', 'Salle de bain'), ('autre', 'Autre')], default='autre', max_length=20, verbose_name='Type de photo')),
                ('principale', models.BooleanField(default=False, verbose_name='Photo principale')),
                ('ordre', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('date_ajout', models.DateTimeField(auto_now_add=True)),
                ('taille_fichier', models.PositiveIntegerField(blank=True, help_text='Taille en octets', null=True)),
            ],
            options={
                'verbose_name': 'Photo de maison',
                'verbose_name_plural': 'Photos de maisons',
                'ordering': ['maison', 'ordre', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Ville',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('code_postal', models.CharField(max_length=10)),
                ('departement', models.CharField(max_length=100)),
                ('pays', models.CharField(default='Cameroun', max_length=100)),
            ],
            options={
                'verbose_name': 'Ville',
                'verbose_name_plural': 'Villes',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Maison',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=200, verbose_name='Nom de la maison')),
                ('numero', models.CharField(help_text="Numéro d'identification unique", max_length=10, unique=True, verbose_name='Numéro')),
                ('description', models.TextField(verbose_name='Description')),
                ('adresse', models.CharField(max_length=255, verbose_name='Adresse')),
                ('capacite_personnes', models.PositiveIntegerField(verbose_name='Capacité (personnes)')),
                ('nombre_chambres', models.PositiveIntegerField(verbose_name='Nombre de chambres')),
                ('nombre_salles_bain', models.PositiveIntegerField(verbose_name='Nombre de salles de bain')),
                ('superficie', models.PositiveIntegerField(help_text='Superficie en m²', verbose_name='Superficie (m²)')),
                ('prix_par_nuit', models.PositiveIntegerField(verbose_name='Prix par nuit (FCFA)')),
                ('disponible', models.BooleanField(default=True, verbose_name='Disponible à la location')),
                ('featured', models.BooleanField(default=False, help_text="Afficher sur la page d'accueil", verbose_name='Mise en avant')),
                ('statut_occupation', models.CharField(choices=[('libre', 'Libre'), ('occupe', 'Occupé'), ('maintenance', 'En maintenance'), ('indisponible', 'Indisponible')], default='libre', max_length=20, verbose_name="Statut d'occupation")),
                ('date_fin_location', models.DateField(blank=True, help_text='Date prévue de libération de la maison', null=True, verbose_name='Date de fin de location')),
                ('wifi', models.BooleanField(default=True, verbose_name='WiFi')),
                ('parking', models.BooleanField(default=False, verbose_name='Parking')),
                ('piscine', models.BooleanField(default=False, verbose_name='Piscine')),
                ('jardin', models.BooleanField(default=False, verbose_name='Jardin')),
                ('climatisation', models.BooleanField(default=False, verbose_name='Climatisation')),
                ('lave_vaisselle', models.BooleanField(default=False, verbose_name='Lave-vaisselle')),
                ('machine_laver', models.BooleanField(default=False, verbose_name='Machine à laver')),
                ('balcon', models.BooleanField(default=False, verbose_name='Balcon')),
                ('terrasse', models.BooleanField(default=False, verbose_name='Terrasse')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('categorie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.categoriemaison', verbose_name='Catégorie')),
            ],
            options={
                'verbose_name': 'Maison',
                'verbose_name_plural': 'Maisons',
                'ordering': ['-date_creation'],
            },
        ),
    ]
